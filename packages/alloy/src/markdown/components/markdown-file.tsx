/* -------------------------------------------------------------------

                  âš¡ Storm Software - Powerlines

 This code was released as part of the Powerlines project. Powerlines
 is maintained by Storm Software under the Apache-2.0 license, and is
 free for commercial and private use. For more information, please visit
 our licensing page at https://stormsoftware.com/licenses/projects/powerlines.

 Website:                  https://stormsoftware.com
 Repository:               https://github.com/storm-software/powerlines
 Documentation:            https://docs.stormsoftware.com/projects/powerlines
 Contact:                  https://stormsoftware.com/contact

 SPDX-License-Identifier:  Apache-2.0

 ------------------------------------------------------------------- */

import { code, getContext, Show, splitProps } from "@alloy-js/core";
import { Link } from "@alloy-js/markdown";
import { SingleLineComment } from "../../core/components/single-line-comment";
import { SourceFile, SourceFileProps } from "../../core/components/source-file";
import { ComponentProps, SourceFileHeaderProps } from "../../types/components";

export type MarkdownFileProps = Omit<SourceFileProps, "filetype"> &
  ComponentProps;

/**
 * A base component representing a Powerlines generated markdown source file.
 *
 * @param props - The properties for the source file.
 * @returns The rendered source file component.
 */
export function MarkdownFile(props: MarkdownFileProps) {
  const [{ children, mode }, rest] = splitProps(props, ["children", "mode"]);

  const nodeContext = getContext()!;
  nodeContext.meta ??= {};
  nodeContext.meta.output = {
    mode
  };

  return (
    <SourceFile
      header={<MarkdownFileHeader />}
      {...rest}
      filetype="md"
      reference={Link}>
      <Show when={Boolean(children)}>{children}</Show>
    </SourceFile>
  );
}

/**
 * Renders the header for a Powerlines Typescript source file.
 *
 * @param props - The properties for the source file header.
 * @returns The rendered source file header.
 */
export function MarkdownFileHeader(props: SourceFileHeaderProps) {
  const [
    {
      children,
      disableEslint = true,
      disableBiome = true,
      disablePrettier = false
    }
  ] = splitProps(props, [
    "children",
    "disableEslint",
    "disableBiome",
    "disablePrettier"
  ]);

  return (
    <>
      <Show when={Boolean(disableEslint)}>
        <SingleLineComment variant="markdown">
          {"eslint-disable"}
        </SingleLineComment>
        <hbr />
      </Show>
      <Show when={Boolean(disablePrettier)}>
        <SingleLineComment variant="markdown">
          {"prettier-ignore"}
        </SingleLineComment>
        <hbr />
      </Show>
      <Show when={Boolean(disableBiome)}>
        <SingleLineComment variant="markdown">
          {"biome-ignore lint: disable"}
        </SingleLineComment>
        <hbr />
      </Show>
      <Show
        when={
          Boolean(disableEslint) ||
          Boolean(disablePrettier) ||
          Boolean(disableBiome)
        }>
        <hbr />
      </Show>
      <Show when={Boolean(children)}>
        <>
          {children}
          <hbr />
        </>
      </Show>
      <SingleLineComment variant="markdown">
        {code`Generated by Powerlines`}
      </SingleLineComment>
      <hbr />
      <SingleLineComment variant="markdown">
        {code`NOTE: Do not edit this file manually - it will be overwritten automatically by the "storm prepare" command`}
      </SingleLineComment>
      <hbr />
    </>
  );
}
